{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/NW/Documents/FED/mywork/graphql-study/client/src/components/BookList.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { GET_BOOKS } from \"../queries/queries\"; // Components\n\nimport BookDetails from \"./BookDetails\";\n\nconst BookList = () => {\n  _s();\n\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(GET_BOOKS);\n  const [selectedBook, setSelectedBook] = useState(null);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \" Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"ERROR\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 21\n  }, this);\n  if (!data) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"No books found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      id: \"book-list\",\n      children: data.books.map(book => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: e => setSelectedBook(book.id),\n          children: book.name\n        }, book.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BookDetails, {\n      bookId: selectedBook\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BookList, \"Qh9ppVdfH8ZmRwYRId9RFhH3awE=\", false, function () {\n  return [useQuery];\n});\n\n_c = BookList;\nexport default BookList;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookList\");","map":{"version":3,"sources":["/Users/NW/Documents/FED/mywork/graphql-study/client/src/components/BookList.js"],"names":["React","Fragment","useState","useQuery","GET_BOOKS","BookDetails","BookList","data","loading","error","selectedBook","setSelectedBook","books","map","book","e","id","name"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,SAAT,QAA0B,oBAA1B,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BN,QAAQ,CAACC,SAAD,CAAzC;AAEA,QAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,IAAD,CAAhD;AAEA,MAAIM,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACX,MAAI,CAACF,IAAL,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEX,sBACE,QAAC,QAAD;AAAA,4BACE;AAAI,MAAA,EAAE,EAAC,WAAP;AAAA,gBACGA,IAAI,CAACK,KAAL,CAAWC,GAAX,CAAgBC,IAAD,IAAU;AACxB,4BACE;AAAkB,UAAA,OAAO,EAAGC,CAAD,IAAOJ,eAAe,CAACG,IAAI,CAACE,EAAN,CAAjD;AAAA,oBACGF,IAAI,CAACG;AADR,WAASH,IAAI,CAACE,EAAd;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD,OANA;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAUE,QAAC,WAAD;AAAa,MAAA,MAAM,EAAEN;AAArB;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAvBD;;GAAMJ,Q;UAC6BH,Q;;;KAD7BG,Q;AAyBN,eAAeA,QAAf","sourcesContent":["import React, { Fragment, useState } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { GET_BOOKS } from \"../queries/queries\";\n\n// Components\nimport BookDetails from \"./BookDetails\";\n\nconst BookList = () => {\n  const { data, loading, error } = useQuery(GET_BOOKS);\n\n  const [selectedBook, setSelectedBook] = useState(null);\n\n  if (loading) return <div> Loading...</div>;\n  if (error) return <div>ERROR</div>;\n  if (!data) return <div>No books found</div>;\n\n  return (\n    <Fragment>\n      <ul id=\"book-list\">\n        {data.books.map((book) => {\n          return (\n            <li key={book.id} onClick={(e) => setSelectedBook(book.id)}>\n              {book.name}\n            </li>\n          );\n        })}\n      </ul>\n      <BookDetails bookId={selectedBook} />\n    </Fragment>\n  );\n};\n\nexport default BookList;\n"]},"metadata":{},"sourceType":"module"}