{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/NW/Documents/FED/mywork/graphql-study/client/src/components/BookList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { GET_AUTHORS, ADD_BOOK, GET_BOOKS } from \"../queries/queries\";\n\nconst AddBook = () => {\n  _s();\n\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(GET_AUTHORS);\n  const [addBook] = useMutation(ADD_BOOK);\n  const [displayError, setDisplayError] = useState(false);\n  const [formState, setFormState] = useState({\n    name: \"\",\n    genre: \"\",\n    authorId: \"\"\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \" Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"ERROR\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 21\n  }, this);\n  if (!data) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"No book added\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 21\n  }, this);\n\n  const displayAuthors = () => {\n    if (data.loading) {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        disabled: true,\n        children: \"Loading authors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 14\n      }, this);\n    } else {\n      return data.authors.map(author => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: author.id,\n          children: author.name\n        }, author.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this);\n      });\n    }\n  };\n\n  const displayErrorMessage = () => {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"error\",\n      children: \"Please enter all details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  };\n\n  const submitFormData = e => {\n    e.preventDefault();\n\n    if (formState.name !== \"\" || formState.genre !== \"\" || formState.authorId !== \"\") {\n      addBook({\n        variables: {\n          name: formState.name,\n          genre: formState.genre,\n          authorId: formState.authorId\n        },\n        refetchQueries: [{\n          query: GET_BOOKS\n        }]\n      });\n    } else {\n      setDisplayError(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    id: \"add-book\",\n    children: [displayError ? displayErrorMessage() : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Book name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => {\n          setFormState({ ...formState,\n            name: e.target.value\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Genre:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => {\n          setFormState({ ...formState,\n            genre: e.target.value\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Author:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setFormState({ ...formState,\n          authorId: e.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Select author\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), displayAuthors()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: submitFormData,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddBook, \"Lcir7DPzLmExKehggKfiXK/YO2c=\", false, function () {\n  return [useQuery, useMutation];\n});\n\n_c = AddBook;\nexport default AddBook;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddBook\");","map":{"version":3,"sources":["/Users/NW/Documents/FED/mywork/graphql-study/client/src/components/BookList.js"],"names":["React","useState","useQuery","useMutation","GET_AUTHORS","ADD_BOOK","GET_BOOKS","AddBook","data","loading","error","addBook","displayError","setDisplayError","formState","setFormState","name","genre","authorId","displayAuthors","authors","map","author","id","displayErrorMessage","submitFormData","e","preventDefault","variables","refetchQueries","query","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { GET_AUTHORS, ADD_BOOK, GET_BOOKS } from \"../queries/queries\";\n\nconst AddBook = () => {\n  const { data, loading, error } = useQuery(GET_AUTHORS);\n  const [addBook] = useMutation(ADD_BOOK);\n\n  const [displayError, setDisplayError] = useState(false);\n\n  const [formState, setFormState] = useState({\n    name: \"\",\n    genre: \"\",\n    authorId: \"\",\n  });\n\n  if (loading) return <div> Loading...</div>;\n  if (error) return <div>ERROR</div>;\n  if (!data) return <div>No book added</div>;\n\n  const displayAuthors = () => {\n    if (data.loading) {\n      return <option disabled>Loading authors</option>;\n    } else {\n      return data.authors.map((author) => {\n        return (\n          <option key={author.id} value={author.id}>\n            {author.name}\n          </option>\n        );\n      });\n    }\n  };\n\n  const displayErrorMessage = () => {\n    return <p id=\"error\">Please enter all details</p>;\n  };\n  const submitFormData = (e) => {\n    e.preventDefault();\n    if (\n      formState.name !== \"\" ||\n      formState.genre !== \"\" ||\n      formState.authorId !== \"\"\n    ) {\n      addBook({\n        variables: {\n          name: formState.name,\n          genre: formState.genre,\n          authorId: formState.authorId,\n        },\n        refetchQueries: [\n          {\n            query: GET_BOOKS,\n          },\n        ],\n      });\n    } else {\n      setDisplayError(true);\n    }\n  };\n\n  return (\n    <form id=\"add-book\">\n      {displayError ? displayErrorMessage() : null}\n      <div className=\"field\">\n        <label>Book name:</label>\n        <input\n          type=\"text\"\n          onChange={(e) => {\n            setFormState({ ...formState, name: e.target.value });\n          }}\n        />\n      </div>\n      <div className=\"field\">\n        <label>Genre:</label>\n        <input\n          type=\"text\"\n          onChange={(e) => {\n            setFormState({ ...formState, genre: e.target.value });\n          }}\n        />\n      </div>\n      <div className=\"field\">\n        <label>Author:</label>\n        <select\n          onChange={(e) =>\n            setFormState({ ...formState, authorId: e.target.value })\n          }\n        >\n          <option>Select author</option>\n          {displayAuthors()}\n        </select>\n      </div>\n\n      <button onClick={submitFormData}>+</button>\n    </form>\n  );\n};\n\nexport default AddBook;\n"]},"metadata":{},"sourceType":"module"}