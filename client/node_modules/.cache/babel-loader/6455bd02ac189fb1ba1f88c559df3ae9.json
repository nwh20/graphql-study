{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/NW/Documents/FED/mywork/graphql-study/client/src/components/BookDetails.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { GET_BOOK } from \"../queries/queries\";\n\nconst BookDetails = props => {\n  _s();\n\n  const {\n    bookId\n  } = props;\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(GET_BOOK, {\n    variables: {\n      id: bookId\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \" Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"ERROR\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 21\n  }, this);\n\n  const printDetails = () => {\n    const {\n      book\n    } = data;\n    console.log(book);\n\n    if (book) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: book.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"Genre:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this), \" \", book.genre]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"Author:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), \" \", book.author.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          children: \"All books by this author: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: book.author.books.map(book => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: book.name\n            }, book.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 22\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No book selected...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"book-details\",\n    children: printDetails()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 10\n  }, this);\n};\n\n_s(BookDetails, \"tP+6C5plfRwxqCbBj3cMUcL7Opk=\", false, function () {\n  return [useQuery];\n});\n\n_c = BookDetails;\nexport default BookDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookDetails\");","map":{"version":3,"sources":["/Users/NW/Documents/FED/mywork/graphql-study/client/src/components/BookDetails.js"],"names":["React","useQuery","GET_BOOK","BookDetails","props","bookId","data","loading","error","variables","id","printDetails","book","console","log","name","genre","author","books","map"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,QAAT,QAAyB,oBAAzB;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM;AAAEC,IAAAA;AAAF,MAAaD,KAAnB;AAEA,QAAM;AAAEE,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BP,QAAQ,CAACC,QAAD,EAAW;AAClDO,IAAAA,SAAS,EAAE;AACTC,MAAAA,EAAE,EAAEL;AADK;AADuC,GAAX,CAAzC;AAMA,MAAIE,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AAEX,QAAMG,YAAY,GAAG,MAAM;AACzB,UAAM;AAAEC,MAAAA;AAAF,QAAWN,IAAjB;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,QAAIA,IAAJ,EAAU;AACR,0BACE;AAAA,gCACE;AAAA,oBAAKA,IAAI,CAACG;AAAV;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,OACiBH,IAAI,CAACI,KADtB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAKE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,OACkBJ,IAAI,CAACK,MAAL,CAAYF,IAD9B;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,eASE;AAAA,oBACGH,IAAI,CAACK,MAAL,CAAYC,KAAZ,CAAkBC,GAAlB,CAAuBP,IAAD,IAAU;AAC/B,gCAAO;AAAA,wBAAmBA,IAAI,CAACG;AAAxB,eAASH,IAAI,CAACF,EAAd;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD,WAFA;AADH;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAiBD,KAlBD,MAkBO;AACL,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;AACF,GAxBD;;AA0BA,sBAAO;AAAK,IAAA,EAAE,EAAC,cAAR;AAAA,cAAwBC,YAAY;AAApC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAvCD;;GAAMR,W;UAG6BF,Q;;;KAH7BE,W;AAyCN,eAAeA,WAAf","sourcesContent":["import React from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { GET_BOOK } from \"../queries/queries\";\n\nconst BookDetails = (props) => {\n  const { bookId } = props;\n\n  const { data, loading, error } = useQuery(GET_BOOK, {\n    variables: {\n      id: bookId,\n    },\n  });\n\n  if (loading) return <div> Loading...</div>;\n  if (error) return <div>ERROR</div>;\n\n  const printDetails = () => {\n    const { book } = data;\n    console.log(book);\n    if (book) {\n      return (\n        <div>\n          <h2>{book.name}</h2>\n          <p>\n            <i>Genre:</i> {book.genre}\n          </p>\n          <p>\n            <i>Author:</i> {book.author.name}\n          </p>\n          <i>All books by this author: </i>\n          <ul>\n            {book.author.books.map((book) => {\n              return <li key={book.id}>{book.name}</li>;\n            })}\n          </ul>\n        </div>\n      );\n    } else {\n      return <div>No book selected...</div>;\n    }\n  };\n\n  return <div id=\"book-details\">{printDetails()}</div>;\n};\n\nexport default BookDetails;\n"]},"metadata":{},"sourceType":"module"}