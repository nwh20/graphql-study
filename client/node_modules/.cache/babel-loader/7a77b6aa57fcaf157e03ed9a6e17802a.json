{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/NW/Documents/FED/mywork/graphql-study/client/src/components/BookDetails.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { GET_BOOK } from '../queries/queries';\n\nconst BookDetails = props => {\n  _s();\n\n  const {\n    data\n  } = useQuery(GET_BOOK, {\n    options: props => {\n      return {\n        variables: {\n          id: props.bookId\n        }\n      };\n    }\n  });\n  console.log(data); // const { book }  = data;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"book-details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BookDetails, \"JtionF1PqWN50DPWu724eJIU2SM=\", false, function () {\n  return [useQuery];\n});\n\n_c = BookDetails;\nexport default BookDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookDetails\");","map":{"version":3,"sources":["/Users/NW/Documents/FED/mywork/graphql-study/client/src/components/BookDetails.js"],"names":["React","useQuery","GET_BOOK","BookDetails","props","data","options","variables","id","bookId","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,SAASC,QAAT,QAAyB,oBAAzB;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM;AAAEC,IAAAA;AAAF,MAAWJ,QAAQ,CAACC,QAAD,EAAW;AAClCI,IAAAA,OAAO,EAAGF,KAAD,IAAW;AAClB,aAAO;AACLG,QAAAA,SAAS,EAAE;AACTC,UAAAA,EAAE,EAAEJ,KAAK,CAACK;AADD;AADN,OAAP;AAKD;AAPiC,GAAX,CAAzB;AAUAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ,EAX6B,CAY7B;;AACA,sBACE;AAAA,2BACE;AAAK,MAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAlCD;;GAAMF,W;UACaF,Q;;;KADbE,W;AAoCN,eAAeA,WAAf","sourcesContent":["import React from 'react'\nimport { useQuery } from '@apollo/react-hooks';\n\nimport { GET_BOOK } from '../queries/queries';\n\nconst BookDetails = (props) => {\n  const { data } = useQuery(GET_BOOK, {\n    options: (props) => {\n      return {\n        variables: {\n          id: props.bookId\n        }\n      }\n    }\n  });\n  \n  console.log(data);\n  // const { book }  = data;\n  return(\n    <div>\n      <div id=\"book-details\">\n{/* \n        {book} ?\n        <div>\n          <h2>{book.name}</h2>\n          <p>{book.genre}</p>\n          <p>{book.author.name}</p>\n          <p>All Books by this author-</p>\n          <ul className=\"all-books\">\n            {book.author.books.map(item => {\n              <li key={item.id}>{item.name}</li>\n            })}\n          </ul>\n        </div>\n        :\n        <div>No book selected..</div> */}\n      </div>\n    </div>\n  );\n}\n\nexport default BookDetails;"]},"metadata":{},"sourceType":"module"}