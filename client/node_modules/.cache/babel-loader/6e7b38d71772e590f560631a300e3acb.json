{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/NW/Documents/FED/mywork/graphql-study/client/src/components/BookDetails.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { GET_BOOK } from '../queries/queries';\n\nconst BookDetails = props => {\n  _s();\n\n  const {\n    loading,\n    error\n  } = useQuery(GET_BOOK, {\n    options: props => {\n      return {\n        variables: {\n          id: props.bookId\n        }\n      };\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Error\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 21\n  }, this);\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"book-details\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Output book details here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BookDetails, \"ojwgO38o7Pa+jiP/qhaLIDn8+Q0=\", false, function () {\n  return [useQuery];\n});\n\n_c = BookDetails;\nexport default BookDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookDetails\");","map":{"version":3,"sources":["/Users/NW/Documents/FED/mywork/graphql-study/client/src/components/BookDetails.js"],"names":["React","useQuery","GET_BOOK","BookDetails","props","loading","error","options","variables","id","bookId","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,SAASC,QAAT,QAAyB,oBAAzB;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAqBL,QAAQ,CAACC,QAAD,EAAW;AAACK,IAAAA,OAAO,EAAGH,KAAD,IAAW;AACjE,aAAO;AAACI,QAAAA,SAAS,EAAE;AAAEC,UAAAA,EAAE,EAAEL,KAAK,CAACM;AAAZ;AAAZ,OAAP;AACD;AAF6C,GAAX,CAAnC;AAIA,MAAIL,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACXK,EAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AAEA,sBACE;AAAA,2BACE;AAAK,MAAA,EAAE,EAAC,cAAR;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAhBD;;GAAMD,W;UACuBF,Q;;;KADvBE,W;AAkBN,eAAeA,WAAf","sourcesContent":["import React from 'react'\nimport { useQuery } from '@apollo/react-hooks';\n\nimport { GET_BOOK } from '../queries/queries';\n\nconst BookDetails = (props) => {\n  const { loading, error } = useQuery(GET_BOOK, {options: (props) => {\n    return {variables: { id: props.bookId }}\n  }});\n\n  if (loading) return <div>Loading</div>;\n  if (error) return <div>Error</div>;\n  console.log(props)\n\n  return(\n    <div>\n      <div id=\"book-details\">\n        <p>Output book details here</p>\n      </div>\n    </div>\n  );\n}\n\nexport default BookDetails;"]},"metadata":{},"sourceType":"module"}