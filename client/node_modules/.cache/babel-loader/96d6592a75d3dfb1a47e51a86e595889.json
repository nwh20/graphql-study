{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/NW/Documents/FED/mywork/graphql-study/client/src/components/AddBook.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport { ADD_BOOK, ADD_BOOK_MUTATION, BOOK_LIST } from '../queries/queries';\n\nconst AddBook = () => {\n  _s();\n\n  const [state, setState] = useState({\n    name: '',\n    genre: '',\n    authorId: ''\n  });\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(ADD_BOOK);\n  const [addBook] = useMutation(ADD_BOOK_MUTATION);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Error\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 21\n  }, this);\n  if (!data) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"No data\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 21\n  }, this);\n  const printAuthors = data.authors.map(author => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: author.id,\n      children: author.name\n    }, author.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  });\n\n  const submitForm = e => {\n    e.preventDefault();\n    addBook({\n      variables: {\n        name: state.name,\n        genre: state.genre,\n        authorId: state.authorId\n      },\n      refetchQueries: [{\n        query: BOOK_LIST\n      }]\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    id: \"add-book\",\n    onSubmit: submitForm,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Book Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setState({ ...state,\n          name: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Genre\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setState({ ...state,\n          genre: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Author\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setState({ ...state,\n          authorId: e.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Select author\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), printAuthors]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddBook, \"SMXINtJmw9+4q1GHmTAJvmnV25w=\", false, function () {\n  return [useQuery, useMutation];\n});\n\n_c = AddBook;\nexport default AddBook;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddBook\");","map":{"version":3,"sources":["/Users/NW/Documents/FED/mywork/graphql-study/client/src/components/AddBook.js"],"names":["React","useState","useQuery","useMutation","ADD_BOOK","ADD_BOOK_MUTATION","BOOK_LIST","AddBook","state","setState","name","genre","authorId","loading","error","data","addBook","printAuthors","authors","map","author","id","submitForm","e","preventDefault","variables","refetchQueries","query","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useQuery, useMutation } from '@apollo/react-hooks';\n\nimport { ADD_BOOK, ADD_BOOK_MUTATION, BOOK_LIST } from '../queries/queries';\n\nconst AddBook = () => {\n  const [state , setState] = useState({\n    name: '',\n    genre: '',\n    authorId: ''\n  });\n  \n  const { loading, error, data } = useQuery(ADD_BOOK);\n  const [ addBook ] = useMutation(ADD_BOOK_MUTATION);\n\n  if (loading) return <div>Loading</div>;\n  if (error) return <div>Error</div>;\n  if (!data) return <div>No data</div>;\n\n  const printAuthors = data.authors.map(author => {\n    return (\n      <option key={author.id} value={author.id}>{author.name}</option>\n    )\n  });\n\n  const submitForm = e => {\n    e.preventDefault();\n    addBook({\n      variables: {\n        name: state.name,\n        genre: state.genre,\n        authorId: state.authorId\n      },\n      refetchQueries: [{ query: BOOK_LIST }]\n    })\n  }\n\n  return(\n    <form id=\"add-book\" onSubmit={submitForm}>\n\n      <div className=\"field\">\n        <label>Book Name</label>\n        <input type=\"text\" onChange={(e)=> setState({ ...state, name: e.target.value })} />\n      </div>\n\n      <div className=\"field\">\n        <label>Genre</label>\n        <input type=\"text\" onChange={(e)=> setState({ ...state, genre: e.target.value })} />\n      </div>\n\n      <div className=\"field\">\n        <label>Author</label>\n        <select onChange={(e)=> setState({ ...state, authorId: e.target.value })}>\n          <option>Select author</option>\n          {printAuthors}\n        </select>\n      </div>\n\n      <button>+</button>\n\n    </form>\n  );\n}\n\nexport default AddBook;"]},"metadata":{},"sourceType":"module"}