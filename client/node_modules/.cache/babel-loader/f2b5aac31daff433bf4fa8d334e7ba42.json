{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/NW/Documents/FED/mywork/graphql-study/client/src/components/BookDetails.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { GET_BOOK } from '../queries/queries';\n\nconst BookDetails = props => {\n  _s();\n\n  const {\n    data\n  } = useQuery(GET_BOOK, {\n    variables: {\n      id: props.bookId\n    }\n  });\n\n  if (data.book) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: data.book.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: data.book.genre\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: data.book.author.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"All Books by this author-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"all-books\",\n        children: data.book.author.books.map(item => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: item.name\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this);\n  }\n\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"book-details\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Output book details here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BookDetails, \"JtionF1PqWN50DPWu724eJIU2SM=\", false, function () {\n  return [useQuery];\n});\n\n_c = BookDetails;\nexport default BookDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookDetails\");","map":{"version":3,"sources":["/Users/NW/Documents/FED/mywork/graphql-study/client/src/components/BookDetails.js"],"names":["React","useQuery","GET_BOOK","BookDetails","props","data","variables","id","bookId","book","name","genre","author","books","map","item","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,SAASC,QAAT,QAAyB,oBAAzB;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM;AAAEC,IAAAA;AAAF,MAAWJ,QAAQ,CAACC,QAAD,EAAW;AAClCI,IAAAA,SAAS,EAAE;AACTC,MAAAA,EAAE,EAAEH,KAAK,CAACI;AADD;AADuB,GAAX,CAAzB;;AAMA,MAAGH,IAAI,CAACI,IAAR,EAAc;AACZ,wBACE;AAAA,8BACE;AAAA,kBAAKJ,IAAI,CAACI,IAAL,CAAUC;AAAf;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAIL,IAAI,CAACI,IAAL,CAAUE;AAAd;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,kBAAIN,IAAI,CAACI,IAAL,CAAUG,MAAV,CAAiBF;AAArB;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA,kBACGL,IAAI,CAACI,IAAL,CAAUG,MAAV,CAAiBC,KAAjB,CAAuBC,GAAvB,CAA2BC,IAAI,IAAI;AAClC,8BAAO;AAAA,sBAAmBA,IAAI,CAACL;AAAxB,aAASK,IAAI,CAACR,EAAd;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD,SAFA;AADH;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AAEDS,EAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAZ;AAEA,sBACE;AAAA,2BACE;AAAK,MAAA,EAAE,EAAC,cAAR;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAhCD;;GAAMF,W;UACaF,Q;;;KADbE,W;AAkCN,eAAeA,WAAf","sourcesContent":["import React from 'react'\nimport { useQuery } from '@apollo/react-hooks';\n\nimport { GET_BOOK } from '../queries/queries';\n\nconst BookDetails = (props) => {\n  const { data } = useQuery(GET_BOOK, {\n    variables: {\n      id: props.bookId\n    }\n  });\n\n  if(data.book) {\n    return(\n      <div>\n        <h2>{data.book.name}</h2>\n        <p>{data.book.genre}</p>\n        <p>{data.book.author.name}</p>\n        <p>All Books by this author-</p>\n        <ul className=\"all-books\">\n          {data.book.author.books.map(item => {\n            return <li key={item.id}>{item.name}</li>\n          })}\n        </ul>\n      </div>\n    )\n  }\n\n  console.log(data)\n\n  return(\n    <div>\n      <div id=\"book-details\">\n        <p>Output book details here</p>\n      </div>\n    </div>\n  );\n}\n\nexport default BookDetails;"]},"metadata":{},"sourceType":"module"}